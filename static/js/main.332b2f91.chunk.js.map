{"version":3,"sources":["components/common/Button/Button.module.css","components/common/Checkbox/Checkbox.module.css","components/Login/Login.tsx","components/Registration/Registration.tsx","components/Profile/Profile.tsx","components/Error404/404.tsx","components/PasswordRecovery/PasswordRecovery.tsx","components/EnteringNewPassword/EnteringNewPassword.tsx","components/common/Input/Input.tsx","components/common/Button/Button.tsx","components/common/Checkbox/Checkbox.tsx","components/Test.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/common/Input/Input.module.css"],"names":["module","exports","Login","Registration","Profile","Error404","PasswordRecovery","EnteringNewPassword","Input","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","className","restProps","finalSpanClassName","s","finalInputClassName","errorInput","superInput","e","currentTarget","value","key","Button","red","finalClassName","default","Checkbox","onChangeChecked","children","checkbox","checked","Test","App","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.332b2f91.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"Button_default__lqbqi\",\"red\":\"Button_red__ZhzNJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"Checkbox_checkbox__1BYhx\",\"spanClassName\":\"Checkbox_spanClassName__XlFLN\"};","import React from 'react'\r\n\r\nexport const Login = () => {\r\n    return (\r\n        <>\r\n            Login\r\n        </>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const Registration = () => {\r\n    return (\r\n        <>\r\n            Registration\r\n        </>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const Profile = () => {\r\n    return (\r\n        <>\r\n            Profile\r\n        </>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const Error404 = () => {\r\n    return (\r\n        <>\r\n            Error404\r\n        </>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const PasswordRecovery = () => {\r\n    return (\r\n        <>\r\n            Password Recovery\r\n        </>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const EnteringNewPassword = () => {\r\n    return (\r\n        <>\r\n            Entering New Password\r\n        </>\r\n    )\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\nimport s from \"./Input.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n};\n\nconst Input: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value);\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        e.key === \"Enter\" // если нажата кнопка Enter\n        && onEnter // и есть пропс onEnter\n        && onEnter(); // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n    const finalInputClassName = `${error ? s.errorInput : s.superInput}`; // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={\"text\"}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    );\n}\n\nexport default Input;\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./Button.module.css\";\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst Button: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    );\n}\n\nexport default Button;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./Checkbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n};\n\nconst Checkbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // сделайте так чтоб работал onChange и onChangeChecked\n        onChange && onChange(e);\n        if(onChangeChecked) {\n            onChangeChecked(e.currentTarget.checked);\n        }\n\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n    return (\n        <label>\n            <input\n                type={\"checkbox\"}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    );\n}\n\nexport default Checkbox;\n","import React from 'react'\r\nimport Input from './common/Input/Input';\r\nimport Button from './common/Button/Button';\r\nimport Checkbox from './common/Checkbox/Checkbox';\r\n\r\nexport const Test = () => {\r\n    return (\r\n        <>\r\n            <Input />\r\n            <Button>super button</Button>\r\n            <Checkbox />\r\n        </>\r\n    )\r\n}","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport './App.css';\nimport {Login} from './components/Login/Login';\nimport {Registration} from './components/Registration/Registration';\nimport {Profile} from './components/Profile/Profile';\nimport {Error404} from './components/Error404/404';\nimport {PasswordRecovery} from './components/PasswordRecovery/PasswordRecovery';\nimport {EnteringNewPassword} from './components/EnteringNewPassword/EnteringNewPassword';\nimport {Test} from './components/Test';\n\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <div>\n                <Route exact path={'/'} render={() => <div>kfkfk</div>}/>\n                <Route path={'/login'} render={() => <Login/>}/>\n                <Route path={'/registration'} render={() => <Registration/>}/>\n                <Route path={'/profile'} render={() => <Profile/>}/>\n                <Route path={'/404'} render={() => <Error404/>}/>\n                <Route path={'/password-recovery'} render={() => <PasswordRecovery/>}/>\n                <Route path={'/entering-new-password'} render={() => <EnteringNewPassword/>}/>\n                <Route path={'/test'} render={() => <Test/>}/>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from 'react-router-dom';\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <App/>\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"Input_superInput__2vut0\",\"errorInput\":\"Input_errorInput__2LjqN\",\"error\":\"Input_error__Lj-jL\"};"],"sourceRoot":""}