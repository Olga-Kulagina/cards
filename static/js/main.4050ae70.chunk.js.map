{"version":3,"sources":["components/Main/Packs/Pack/Pack.module.css","components/Main/Packs/Packs.module.css","components/Main/Registration/Registration.module.css","components/Main/modal/modal.module.css","components/Main/Cards/Cards.module.css","components/Main/Cards/Card/Card.module.css","components/Main/Packs/sort/Sort.module.css","components/common/Input/Input.module.css","components/Main/PasswordRecovery/PasswordRecovery.module.css","components/Main/Login/Login.module.css","components/common/Checkbox/Checkbox.module.css","components/common/Button/Button.module.css","components/Main/Profile/Profile.module.css","components/Main/Learn/Learn.module.css","components/Main/Packs/search/Search.module.css","components/Header/Header.module.css","components/Main/Login/api-login.ts","redux/login-reducer.ts","components/common/Input/Input.tsx","components/common/Checkbox/Checkbox.tsx","components/common/Button/Button.tsx","components/Main/Login/Login.tsx","Api.ts","redux/registration-reduser.ts","components/Main/Registration/Registration.tsx","components/Main/Profile/api-profile.ts","redux/profile-reducer.ts","components/Main/Profile/Profile.tsx","components/Main/Error404/404.tsx","components/Main/PasswordRecovery/api-forgot.ts","redux/forgot-reducer.ts","components/Main/PasswordRecovery/PasswordRecovery.tsx","components/Main/EnteringNewPassword/EnteringNewPassword.tsx","components/Test.tsx","components/Main/Logout/Logout.tsx","components/Main/Packs/api-packs.ts","redux/packs-reducer.ts","components/Main/Packs/Pack/Pack.tsx","redux/filterOrSearch-reducer.ts","components/Main/Packs/search/Search.tsx","components/Main/Packs/sort/Sort.tsx","components/Main/modal/Portal.tsx","components/Main/modal/EampleModal.tsx","components/Main/Packs/Packs.tsx","components/Main/Cards/Card/Card.tsx","components/Main/Cards/api-cards.ts","redux/cards-reducer.ts","components/Main/Cards/Cards.tsx","components/Main/Learn/Learn.tsx","components/Main/Main.tsx","components/Header/Header.tsx","App.tsx","reportWebVitals.ts","redux/app-reducer.ts","redux/store.ts","index.tsx"],"names":["module","exports","instance","axios","create","baseURL","withCredentials","loginAPI","data","post","initialState","isLoggedIn","Input","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","className","restProps","finalSpanClassName","s","finalInputClassName","errorInput","superInput","e","currentTarget","value","key","Checkbox","onChangeChecked","children","checkbox","checked","Button","red","finalClassName","default","Login","dispatch","useDispatch","useSelector","state","login","formik","useFormik","initialValues","email","password","rememberMe","onSubmit","values","then","res","console","log","to","handleSubmit","loginForm","center","placeholder","getFieldProps","instans","RegistrationApi","delete","SetNewPass","resetPasswordToken","message","registeredStatus","answerRequestAC","errorText","succesRequestAC","registerReduser","action","Registration","errorMessage","registration","useState","setPassword","setEmail","setError","useEffect","cl","text","trim","onClick","statusText","registrationAC","catch","err","response","registrationTC","profileAPI","isAuthorized","name","Profile","profile","userName","Error404","forgotAPI","newPasswordRequest","PasswordRecovery","requestMessage","forgot","from","info","newPasswordRequestSuccess","forgotForm","EnteringNewPassword","password1","setPassword1","token","useParams","pass","setNewPassTC","Test","Logout","alert","packsAPI","get","cardsPack","id","put","_id","packs","cardsCount","updated","url","userId","getPacksTC","cardPacks","Pack","props","tableRow","count","buttons","link","activeClassName","active","nameSearch","abcType","searchByNameAC","Search","search","charCode","Sort","setActive","hoverEL","setHoverEL","payload","selectedItem","items","find","i","hoveredItem","showActive","select","onKeyUp","length","pretendentElement","tabIndex","mainTitle","title","map","onMouseEnter","itemClicked","item","selected","Portal","el","document","createElement","body","appendChild","this","removeChild","ReactDOM","createPortal","Component","defaultProps","modalHeader","modalFooter","collaps","onCansel","ExampleModal","ModalOverlay","ModalContent","modalWindow","style","float","modalBody","Packs","ollPacks","filter","pack","includes","sort","a","b","popupId","setPopupId","setcollaps","wrap","flexWrap","table","p","index","Card","question","answer","grade","cardsAPI","packId","cards","cardsPack_id","comments","created","questionImg","rating","shots","user_id","getCardsTC","Cards","c","getCard","sum","reduce","acc","card","rand","Math","random","newSum","Learn","first","setFirst","setCard","isChecked","setIsChecked","PATH","Main","path","exact","render","Header","nav","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","isInitialized","rootReducer","combineReducers","app","store","createStore","applyMiddleware","thunkMiddleware","StrictMode","getElementById"],"mappings":"kFACAA,EAAOC,QAAU,CAAC,SAAW,uBAAuB,KAAO,mBAAmB,MAAQ,oBAAoB,QAAU,sBAAsB,IAAM,kBAAkB,QAAU,sBAAsB,KAAO,qB,mBCAzMD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,KAAO,oBAAoB,SAAW,wBAAwB,KAAO,oBAAoB,MAAQ,qBAAqB,QAAU,uBAAuB,IAAM,mBAAmB,QAAU,yB,mBCAzOD,EAAOC,QAAU,CAAC,aAAe,mCAAmC,OAAS,+B,mBCA7ED,EAAOC,QAAU,CAAC,aAAe,4BAA4B,aAAe,4BAA4B,YAAc,2BAA2B,YAAc,2BAA2B,MAAQ,qBAAqB,UAAY,yBAAyB,YAAc,6B,mBCA1QD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,KAAO,oBAAoB,SAAW,wBAAwB,SAAW,wBAAwB,OAAS,sBAAsB,MAAQ,qBAAqB,QAAU,uBAAuB,IAAM,mBAAmB,QAAU,yB,mBCAhRD,EAAOC,QAAU,CAAC,SAAW,uBAAuB,SAAW,uBAAuB,OAAS,qBAAqB,MAAQ,oBAAoB,QAAU,sBAAsB,IAAM,kBAAkB,QAAU,wB,mBCAlND,EAAOC,QAAU,CAAC,OAAS,qBAAqB,UAAY,wBAAwB,MAAQ,oBAAoB,KAAO,mBAAmB,SAAW,yB,mBCArJD,EAAOC,QAAU,CAAC,WAAa,0BAA0B,WAAa,0BAA0B,MAAQ,uB,mBCAxGD,EAAOC,QAAU,CAAC,WAAa,qCAAqC,OAAS,iCAAiC,eAAiB,2C,mBCA/HD,EAAOC,QAAU,CAAC,UAAY,yBAAyB,OAAS,wB,mBCAhED,EAAOC,QAAU,CAAC,SAAW,2BAA2B,cAAgB,kC,mBCAxED,EAAOC,QAAU,CAAC,QAAU,wBAAwB,IAAM,sB,mBCA1DD,EAAOC,QAAU,CAAC,OAAS,0B,mBCA3BD,EAAOC,QAAU,CAAC,OAAS,wB,mBCA3BD,EAAOC,QAAU,CAAC,OAAS,yB,gGCA3BD,EAAOC,QAAU,CAAC,IAAM,oBAAoB,KAAO,qBAAqB,OAAS,yB,gLCC3EC,EAAWC,IAAMC,OAAO,CAC1BC,QAAS,6BACTC,iBAAiB,IASRC,EAAW,SACdC,GACF,OAAON,EAASO,KAAK,aAAcD,ICZrCE,EAAe,CACjBC,YAAY,G,yBCsDDC,EA3CkC,SAAC,GAU7C,EARGC,KAQF,IAPEC,EAOH,EAPGA,SAAUC,EAOb,EAPaA,aACVC,EAMH,EANGA,WAAYC,EAMf,EANeA,QACZC,EAKH,EALGA,MACWC,GAId,EAJGC,UAIH,EAJcD,eAERE,EAEN,6GAeKC,EAAkB,UAAMC,IAAEL,MAAR,YAAiBC,GAAgC,IACnEK,EAAmB,UAAMN,EAAQK,IAAEE,WAAaF,IAAEG,YAExD,OACI,oCACI,yCACIb,KAAM,OACNC,SArBa,SAACa,GACtBb,GACGA,EAASa,GAEZZ,GAAgBA,EAAaY,EAAEC,cAAcC,QAkBrCb,WAhBe,SAACW,GACxBX,GAAcA,EAAWW,GAEf,UAAVA,EAAEG,KACCb,GACAA,KAYKG,UAAWI,GAEPH,IAEPH,GAAS,0BAAME,UAAWE,GAAqBJ,K,iBCP7Ca,EAnCoC,SAAC,GAS/C,EAPGlB,KAOF,IANEC,EAMH,EANGA,SAAUkB,EAMb,EANaA,gBACVZ,EAKH,EALGA,UACAa,GAIH,EALcd,cAKd,EAJGc,UAEGZ,EAEN,4FAUKG,EAAmB,UAAMD,IAAEW,SAAR,YAAoBd,GAAwB,IAErE,OACI,+BACI,yCACIP,KAAM,WACNC,SAfa,SAACa,GAEtBb,GAAYA,EAASa,GAClBK,GACCA,EAAgBL,EAAEC,cAAcO,UAY5Bf,UAAWI,GAEPH,IAEPY,GAAY,0BAAMb,UAAWG,IAAEJ,eAAgBc,K,iBCf7CG,EAhBgC,SAAC,GAK1C,IAHEC,EAGH,EAHGA,IAAKjB,EAGR,EAHQA,UACFC,EAEN,mCACKiB,EAAc,UAAMD,EAAMd,IAAEc,IAAMd,IAAEgB,QAAtB,YAAiCnB,GAErD,OACI,0CACIA,UAAWkB,GACPjB,KCVHmB,EAAQ,WACjB,IAAMC,EAAWC,cAEX/B,EAAagC,aAAuC,SAAAC,GAAK,OAAIA,EAAMC,MAAMlC,cAEzEmC,EAASC,YAAU,CACrBC,cAAe,CACXC,MAAO,GACPC,SAAU,GACVC,YAAY,GAEhBC,SAAU,SAAAC,GJAK,IAAC7C,EICZiC,GJDYjC,EICK6C,EJDqB,SAACZ,GAC/ClC,EAAeC,GACV8C,MAAK,SAACC,GACHd,EAL+B,CAAC5B,KAAM,mBAAoBgB,OAKnC,IACvB2B,QAAQC,IAAI,qBICpB,OAAI9C,EACO,kBAAC,IAAD,CAAU+C,GAAI,aAIrB,6BAEI,0BAAMN,SAAUN,EAAOa,aAAcvC,UAAWG,IAAEqC,WAE9C,yBAAKxC,UAAWG,IAAEsC,QACd,qCACA,+BACI,kBAAC,EAAD,eACIhD,KAAK,QACLiD,YAAY,SACRhB,EAAOiB,cAAc,YAGjC,+BACI,kBAAC,EAAD,eACIlD,KAAK,WACLiD,YAAY,YACRhB,EAAOiB,cAAc,eAGjC,+BACI,kBAAC,EAAD,eAAUlD,KAAK,YACDiC,EAAOiB,cAAc,gBAFvC,gBAKA,kBAAC,EAAD,CAAQlD,KAAK,UAAb,e,OCvDdmD,EAAU7D,IAAMC,OAAO,CACzBC,QAAS,6BACTC,iBAAiB,IAQR2D,EAAkB,SACnBhB,EAAeC,GACnB,OAAOc,EAAQvD,KAAK,gBAAgB,CAACwC,QAAMC,cAFtCe,EAAkB,WAMvB,OAAOD,EAAQE,OAAO,YAGjBC,EAAa,SAClBjB,EAAgBkB,GAChB,OAAOJ,EAAQvD,KAAR,wBAAqC,CAACyC,WAASkB,wBCR1D1D,EAAiC,CACjCuC,MAAO,GACPC,SAAU,GACVhC,MAAO,GACPmD,QAAS,GACTC,iBAAkB,MA2BTC,EAAkB,SAACC,GAAD,MAAwB,CAAC3D,KAAM,YAAa2D,cAC9DC,EAAkB,SAACJ,GAAD,MAAqB,CAACxD,KAAM,aAAawD,YAyCzDK,EAnES,WAAiE,IAAhE9B,EAA+D,uDAAvDlC,EAAciE,EAAyC,uCACpF,OAAQA,EAAO9D,MACX,IAAK,eACD,OAAO,2BACA+B,GADP,IAEIK,MAAO0B,EAAO1B,MACdC,SAAUyB,EAAOzB,WAEzB,IAAK,aACD,OAAO,2BACAN,GADP,IAEIyB,QAASM,EAAON,QAChBC,kBAAkB,IAE1B,IAAK,YACD,OAAO,2BACA1B,GADP,IAEI1B,MAAOyD,EAAOH,UACdF,kBAAkB,IAE1B,QACI,OAAO1B,I,iBClCNgC,EAAe,WACxB,IAAMnC,EAAWC,cACXmC,EAAelC,aAAsC,SAACC,GAAD,OAAWA,EAAMkC,aAAa5D,SACnFmD,EAAU1B,aAAsC,SAACC,GAAD,OAAWA,EAAMkC,aAAaT,WAC9EC,EAAmB3B,aAA8C,SAACC,GAAD,OAAWA,EAAMkC,aAAaR,oBAJvE,EAKAS,mBAAiB,IALjB,mBAKzB7B,EALyB,KAKf8B,EALe,OAMND,mBAAiB,IANX,mBAMzB9B,EANyB,KAMlBgC,EANkB,OAONF,mBAAiB,IAPX,mBAOzB7D,EAPyB,KAOlBgE,EAPkB,KAU9BC,qBAAU,WACFb,GACc,KAAVpD,IACA+D,EAAS,IACTD,EAAY,OAGrB,CAACV,IA6BJ,OAAIA,EACO,kBAAC,IAAD,CAAUZ,GAAI,WAGrB,yBAAKtC,UAAWgE,IAAGN,cACf,yBAAK1D,UAAWgE,IAAGvB,QACf,4CACA,oCACI,kBAAC,EAAD,CAAOC,YAAa,QAASjD,KAAM,QAASE,aAnCjC,SAACsE,GAEpBA,EAAKC,SACLJ,EAAS,IACTD,EAASI,KAgCMjE,UAAW,UAAWF,MAAOA,EAAOW,MAAOoB,KAEtD,oCACI,kBAAC,EAAD,CAAOa,YAAa,WAAYjD,KAAM,WAAYE,aA7BvC,SAACsE,GACpBA,EAAKC,QACLN,EAAYK,IA4BGjE,UAAW,UAAWF,MAAOA,EAAOW,MAAOqB,KAEtD,kBAAC,EAAD,CAAQqC,QAvBJ,WAEZ9C,EDAsB,SAACQ,EAAeC,GAAhB,OAAqC,SAACT,GAC5DwB,EAAwBhB,EAAOC,GAC1BI,MAAK,SAAAC,GACFC,QAAQC,IAAIF,EAAI/C,MAChBgD,QAAQC,IAAIF,EAAIiC,YAChB,IAAInB,EAAUd,EAAIiC,WAClB/C,EATc,SAACQ,EAAeC,GAAhB,MAAsC,CAACrC,KAAM,eAAgBoC,QAAOC,YASzEuC,CAAexC,EAAOC,IAC/BT,EAASgC,EAAgBJ,OAC1BqB,OAAM,SAACC,GAGVlD,EAAS8B,EAAgBoB,EAAIC,SAASpF,KAAKU,YCXtC2E,CAAe5C,EAAOC,MAqBvB,QAECoB,EAAmB,2BAAID,GAAe,2BAAIQ,MCtErD3E,EAAWC,IAAMC,OAAO,CAC1BC,QAAS,6BACTC,iBAAiB,IAKRwF,EAAa,WAElB,OAAO5F,EAASO,KAAK,UAAW,KCRlCC,EAAe,CACjBqF,cAAc,EACdC,KAAM,GACN9E,MAAO,I,iBCAE+E,EAAU,WAEnB,IAAMxD,EAAWC,cAEXxB,EAAQyB,aAAsC,SAAAC,GAAK,OAAIA,EAAMsD,QAAQhF,SACrE6E,EAAepD,aAAuC,SAAAC,GAAK,OAAIA,EAAMsD,QAAQH,gBAEnFZ,qBAAU,WACN1C,GDeuB,SAACA,GAC5BqD,IACKxC,MAAK,SAACC,GANS,IAAC1B,EAAgBmE,EAO7BvD,GAPaZ,GAOY,EAPImE,EAOEzC,EAAI/C,KAAKwF,KAPO,CAACnF,KAAM,oBAAqBgB,QAAOmE,aASrFN,OAAM,SAACC,GACDA,EAAIC,UACHnD,EAVqB,CAAC5B,KAAM,YAAaK,MAUvByE,EAAIC,SAASpF,KAAKU,gBCrB7C,CAACuB,IAEJ,IAAM0D,EAAWxD,aAAsC,SAAAC,GAAK,OAAIA,EAAMsD,QAAQF,QAE9E,OAAGD,EAEK,yBAAK3E,UAAWG,IAAEsC,QAAlB,cACgBsC,GAOpB,yBAAK/E,UAAWG,IAAEsC,QACb3C,IC5BAkF,EAAW,WACpB,OACI,iD,iBCDFlG,EAAWC,IAAMC,OAAO,CAC1BC,QAAS,uCACTC,iBAAiB,IAOR+F,GAAY,SACd7F,GACH,OAAON,EAASO,KAAK,cAAeD,ICHtCE,GAAe,CACjB4F,mBAAoB,KACpBjC,QAAS,GACTnD,MAAO,ICLEqF,GAAmB,WAE5B,IAAM9D,EAAWC,cAGX8D,GADqB7D,aAAsD,SAAAC,GAAK,OAAIA,EAAM6D,OAAOH,sBAChF3D,aAAsC,SAAAC,GAAK,OAAIA,EAAM6D,OAAOpC,YAC7EQ,EAAelC,aAAsC,SAAAC,GAAK,OAAIA,EAAM6D,OAAOvF,SAE3E4B,EAASC,YAAU,CACrBC,cAAe,CACXC,MAAO,GACPyD,KAAM,qCACNrC,QAAQ,0KAIZjB,SAAU,SAAAC,GDaM,IAAC7C,ECZbiC,GDYajC,ECZK6C,EDYsB,SAACZ,GACrD4D,GAAiB7F,GACZ8C,MAAK,SAACC,GACH,IAAIc,EAAUd,EAAI/C,KAAKmG,KACvBlE,EAT0B,SAACZ,EAA+BwC,GAAhC,MAC7B,CAACxD,KAAM,+BAAgCgB,QAAOwC,WAQlCuC,CAA0B,UAAWvC,OAEjDqB,OAAM,SAACC,GATmB,IAAC9D,EAA+BX,EAUvDuB,GAVwBZ,EAUQ,OAVuBX,EAUfyE,EAAIC,SAASpF,KAAKU,MAT7D,CAACL,KAAM,4BAA6BgB,QAAOX,oBCN5C,MAAsB,KAAnBsF,EAEK,yBAAKpF,UAAWG,IAAEiF,gBAAiBA,GAKvC,6BACI,0BAAMpD,SAAUN,EAAOa,aAAcvC,UAAWG,IAAEsF,YAE9C,yBAAKzF,UAAWG,IAAEsC,QACd,iDACA,+BACI,kBAAC,EAAD,eACIhD,KAAK,QACLiD,YAAY,SACRhB,EAAOiB,cAAc,YAGjC,kBAAC,EAAD,CAAQlD,KAAK,UAAb,QACkB,KAAjBgE,EAAsB,6BAAMA,GAAsB,OCxC1DiC,GAAsB,WAC/B,IAAMrE,EAAWC,cACXmC,EAAelC,aAAsC,SAACC,GAAD,OAAWA,EAAMkC,aAAa5D,SACnFmD,EAAU1B,aAAsC,SAACC,GAAD,OAAWA,EAAMkC,aAAaT,WAC9EC,EAAmB3B,aAA8C,SAACC,GAAD,OAAWA,EAAMkC,aAAaR,oBAJhE,EAKPS,mBAAiB,IALV,mBAKhC7B,EALgC,KAKtB8B,EALsB,OAMLD,mBAAiB,IANZ,mBAMhCgC,EANgC,KAMrBC,EANqB,OAObjC,mBAAiB,IAPJ,mBAOhC7D,EAPgC,KAOzBgE,EAPyB,OAQdH,mBAAiBV,GARH,mBAsBzB4C,GAtByB,UAsBfC,cAAVD,OAgBZ,OACI,yBAAK7F,UAAWgE,IAAGN,cACf,yBAAK1D,UAAWgE,IAAGvB,QACpB,sDACK,oCACI,kBAAC,EAAD,CAAOC,YAAa,WAAYjD,KAAM,OAAQE,aAjCpC,SAACsE,GACnBA,EAAKC,SACLJ,EAAS,IACTF,EAAYK,KA+BGjE,UAAW,UAAWF,MAAOA,EAAOW,MAAOqB,KAEtD,oCACI,kBAAC,EAAD,CAAOY,YAAa,kBAAmBjD,KAAM,OAAQE,aA/B1C,SAACsE,GACpBA,EAAKC,QACL0B,EAAa3B,IA8BEjE,UAAW,UAAWF,MAAOA,EAAOW,MAAOkF,KAEtD,kBAAC,EAAD,CAAQxB,QA3BG,WAChBrC,IAAa6D,GACZ7B,EAAS,4GACT8B,EAAa,KAEbvE,ETqCgB,SAAC0E,EAAYF,GAAb,OAA8B,SAACxE,GAEvD0B,EAAegD,EAAMF,GAChB3D,MAAK,SAAAC,GAEFC,QAAQC,IAAIF,GACZ,IAAIc,EAAUd,EAAIiC,WAClB/C,EAASgC,EAAgBJ,OAC1BqB,OAAM,SAAAC,GAETlD,EAAS8B,EAAgBoB,EAAIC,SAASpF,KAAKU,YS/C9BkG,CAAalE,EAAU+D,MAsB5B,QAEC3C,EAAmB,2BAAID,GAAe,2BAAIQ,MCzD9CwC,GAAO,WAChB,OACI,oCACI,kBAAC,EAAD,MACA,kBAAC,EAAD,qBACA,kBAAC,EAAD,QCHCC,GAAS,WAElB,IAAM7E,EAAWC,cAOjB,OACI,yBAAKtB,UAAWgE,IAAGN,cACf,yBAAK1D,UAAWgE,IAAGvB,QACf,kEACA,kBAAC,EAAD,CAAQ0B,QATF,WAEd9C,GXmDyB,SAACA,GAE9BwB,IACKX,MAAK,SAAAC,GAEFC,QAAQC,IAAIF,MAEbmC,OAAM,SAAAC,GACL4B,MAAM5B,WWpDF,YACA,kD,6BCnBVzF,GAAWC,IAAMC,OAAO,CAC1BC,QAAS,6BACTC,iBAAiB,IAGRkH,GAAW,WAEhB,OAAOtH,GAASuH,IAAI,4BAFfD,GAAW,WAMhB,OAAOtH,GAASO,KAAK,aADL,CAACiH,UAAW,CAAC1B,KAAM,cAL9BwB,GAAW,SAQTG,GACP,OAAOzH,GAASgE,OAAT,wBAAiCyD,KATnCH,GAAW,SAWTG,GACP,OAAOzH,GAAS0H,IAAI,aAAc,CAACF,UAAW,CAACG,IAAKF,MCDtDjH,GAAiC,CACnCoH,MAAO,CACH,CACID,IAAK,MACLE,WAAY,EACZ/B,KAAM,YACNgC,QAAS,QACTC,IAAK,SACLC,OAAQ,OAEZ,CACIL,IAAK,QACLE,WAAY,EACZ/B,KAAM,YACNgC,QAAS,QACTC,IAAK,SACLC,OAAQ,OACT,CACCL,IAAK,SACLE,WAAY,EACZ/B,KAAM,YACNgC,QAAS,QACTC,IAAK,SACLC,OAAQ,SAgCPC,GAAa,kBAAM,SAAC1F,GAC7B+E,KACKlE,MAAK,SAACC,GACHd,EATyC,CAAC5B,KAAM,YAAaiH,MAS3CvE,EAAI/C,KAAK4H,iB,oBCrE1BC,GAAO,SAACC,GACjB,IAAM7F,EAAWC,cASjB,OACI,yBAAKtB,UAAWG,KAAEgH,UACd,yBAAKnH,UAAWG,KAAEyE,MACbsC,EAAMtC,MAEX,yBAAK5E,UAAWG,KAAEiH,OACbF,EAAMP,YAEX,yBAAK3G,UAAWG,KAAEyG,SACbM,EAAMN,SAEX,yBAAK5G,UAAWG,KAAE0G,KACbK,EAAML,KAEX,yBAAK7G,UAAWG,KAAEkH,SACd,4BAAQlD,QAtBH,WD8EO,IAACoC,EC7ErBlF,GD6EqBkF,EC7ECW,EAAMT,ID6EQ,SAACpF,GACzC+E,GAAoBG,GACfrE,MAAK,SAACC,GACHd,EAtBqB,CAAC5B,KAAM,mBAwB/ByC,KAAKb,EAAS0F,YC7DP,OACA,4BAAQ5C,QApBH,WDkFO,IAACoC,ECjFrBlF,GDiFqBkF,ECjFCW,EAAMT,IDiFQ,SAACpF,GACzC+E,GAAoBG,GACfrE,MAAK,SAACC,GACHd,EA5BqB,CAAC5B,KAAM,mBA8B/ByC,KAAKb,EAAS0F,YCnEP,UACA,kBAAC,IAAD,CAAS/G,UAAWG,KAAEmH,KAAMhF,GAAE,iBAAY4E,EAAMT,KAAOc,gBAAiBpH,KAAEqH,QAA1E,SACA,kBAAC,IAAD,CAASxH,UAAWG,KAAEmH,KAAMhF,GAAE,iBAAY4E,EAAMT,KAAOc,gBAAiBpH,KAAEqH,QAA1E,Y,oBClCVlI,GAAe,CACjBmI,WAAY,GACZ3H,MAAO,GACP4H,QAAS,OAyBAC,GAAiB,SAAEF,GAAF,MAA0B,CAAChI,KAAM,iBAAkBgI,eCrBpEG,GAAS,WAClB,IAAMvG,EAAWC,cAEbmG,EAAalG,aAAqC,SAAAC,GAAK,OAAIA,EAAMqG,OAAOJ,cAW5E,OACI,yBAAKzH,UAAWgE,KAAG6D,QACf,2BAAOpI,KAAK,OAAOgB,MAAOgH,EAAY/H,SAZtB,SAACa,GACrBc,EAASsG,GAAepH,EAAEC,cAAcC,SAW6Bb,WAT/C,SAACW,GAEJ,KAAfA,EAAEuH,UACFzG,EAASsG,GAAepH,EAAEC,cAAcC,SAMwDiC,YAAa,a,oBCV5GqF,GAAO,SAACb,GACjB,IAAM7F,EAAWC,cACbb,EAAQc,aAAqC,SAAAC,GAAK,OAAIA,EAAMqG,OAAOH,WAFjC,EAGV/D,oBAAS,GAHC,mBAG/B6D,EAH+B,KAGvBQ,EAHuB,OAIRrE,mBAASlD,GAJD,mBAI/BwH,EAJ+B,KAItBC,EAJsB,KAKhCxI,EAAU,SAACe,GACbY,EFU0C,CAAC5B,KAAM,SAAU0I,QEVtC1H,KAEnB2H,EAAelB,EAAMmB,MAAMC,MAAK,SAAAC,GAAC,OAAIA,EAAE9H,QAAUA,KACjD+H,EAActB,EAAMmB,MAAMC,MAAK,SAAAC,GAAC,OAAIA,EAAE9H,QAAUwH,KAEtDlE,qBAAU,WACNmE,EAAWzH,KACZ,CAACA,IAEJ,IAAMgI,EAAa,WAAQT,GAAWR,IA0BtC,OACI,yBAAMxH,UAAWgE,KAAG0E,OAAQC,QAtBhB,SAACpI,GACb,GAAc,cAAVA,EAAEG,KAAiC,YAAVH,EAAEG,IAAmB,CAC9C,IAAK,IAAI6H,EAAI,EAAGA,EAAIrB,EAAMmB,MAAMO,OAAQL,IACpC,GAAIrB,EAAMmB,MAAME,GAAG9H,QAAUwH,EAAS,CAClC,IAAMY,EAA8B,cAAVtI,EAAEG,IAAsBwG,EAAMmB,MAAME,EAAI,GAAKrB,EAAMmB,MAAME,EAAI,GACvF,GAAIM,EAGA,OAFAnJ,EAASmJ,EAAkBpI,YAC3ByH,EAAWhB,EAAMmB,MAAME,EAAE,GAAG9H,OAKnC2H,GACD1I,EAASwH,EAAMmB,MAAM,GAAG5H,OAGlB,UAAVF,EAAEG,KAA6B,WAAVH,EAAEG,KACvBsH,GAAU,IAKgCc,SAAU,GACpD,wBAAI3E,QAASsE,EAAYzI,UAAWgE,KAAG+E,WAAYX,GAAgBA,EAAaY,OAC/ExB,GACD,yBAAKxH,UAAWgE,KAAGqE,OACdnB,EAAMmB,MAAMY,KAAI,SAAAV,GAAC,OACd,yBAAK7H,IAAK6H,EAAE9H,MACPyI,aAAc,WAAQhB,EAAWK,EAAE9H,QACnC0D,QAAS,YAjCV,SAAC1D,GACjBf,EAASe,GACTgI,IA+BmCU,CAAYZ,EAAE9H,QAChCT,UAAWgE,KAAGoF,MAAQZ,IAAgBD,EAAIvE,KAAGqF,SAAW,KACxDd,EAAES,a,wDCjDZM,G,+MAZXC,GAAKC,SAASC,cAAc,O,mEAExBD,SAASE,KAAKC,YAAYC,KAAKL,M,6CAG/BC,SAASE,KAAKG,YAAYD,KAAKL,M,+BAEzB,IACC1I,EAAU+I,KAAK1C,MAAfrG,SACP,OAAOiJ,IAASC,aAAalJ,EAAU+I,KAAKL,Q,GAV/BS,aCQfC,GAA0B,CAC5BC,YAAa,aACbC,YAAa,GACbC,SAAS,EACTC,SAAU,aACVxJ,SAAU,MAEDyJ,GAAe,WAA2B,IAA1BpD,EAAyB,uDAAjB+C,GAC3BvK,EAAS,WACXwH,EAAMmD,YAEV,OACI,oCAAGnD,EAAMkD,SACT,kBAAC,GAAD,KACI,yBAAKpK,UAAWgE,KAAGuG,cACf,yBAAKvK,UAAWgE,KAAGwG,cACf,yBAAKxK,UAAWgE,KAAGyG,aACf,yBAAKzK,UAAWgE,KAAGkG,aACf,yBAAKlK,UAAWgE,KAAGgF,OAAO,4BAAK9B,EAAMgD,cACrC,uBAAG/F,QAASzE,EAAUgL,MAAO,CAACC,MAAO,UAArC,MAEJ,yBAAK3K,UAAWgE,KAAG4G,WACd1D,EAAMrG,UAEX,yBAAKb,UAAWgE,KAAGmG,aACdjD,EAAMiD,mBCxBtBU,GAAQ,WACjB,IAAMxJ,EAAWC,cAEXoF,EAAQnF,aAA+C,SAAAC,GAAK,OAAIA,EAAMkF,MAAMA,SAC5Ee,EAAalG,aAAsC,SAAAC,GAAK,OAAIA,EAAMqG,OAAOJ,cACzEC,EAAUnG,aAAsC,SAAAC,GAAK,OAAIA,EAAMqG,OAAOH,WACvDnG,aAAuC,SAAAC,GAAK,OAAIA,EAAMsD,QAAQH,gBAEnFZ,qBAAU,WACN1C,EAAS0F,QACV,IAEH,IAII+D,EAAWpE,EACZe,IACCqD,EAAUpE,EAAMqE,QAAO,SAAAC,GAAI,OAAGA,EAAKpG,KAAKqG,SAASxD,OAExC,QAAVC,IAEAoD,EAAU,aAAIA,GAAUI,MAAK,SAACC,EAAGC,GAC5B,OAAID,EAAEvG,KAAOwG,EAAExG,KAAc,EACzBuG,EAAEvG,KAAOwG,EAAExG,MAAe,EACvB,KAGXxC,QAAQC,IAAIyI,IAEH,QAAVpD,IACCoD,EAAUA,EAASI,MAAK,SAACC,EAAGC,GACxB,OAAID,EAAEvG,KAAOwG,EAAExG,KAAc,EACzBuG,EAAEvG,KAAOwG,EAAExG,MAAe,EACvB,MAlCQ,MAsCKjB,mBAAS,IAtCd,mBAsClB0H,EAtCkB,KAsCTC,EAtCS,OAuCK3H,oBAAS,GAvCd,mBAuClByG,EAvCkB,KAuCTmB,EAvCS,KAgDvB,OACI,yBAAKvL,UAAWG,KAAEqL,MACd,yBAAKxL,UAAWG,KAAEsL,UACd,4BAAQlF,GAAG,IAAIpC,QARJ,WACnBoH,GAAYnB,GACZkB,EAAW,OAMH,cACA,kBAAC,GAAD,CAAclB,QAASA,GAAuB,MAAZiB,EAAiBhB,SAZ9C,WACbkB,GAAYnB,IAYiBvJ,SAAU,2CAC/B,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAMwH,MAAO,CAAC,CAACW,MAAM,MAAMvI,MAAM,OAAO,CAACuI,MAAM,MAAMvI,MAAM,OAAO,CAACuI,MAAM,QAAQvI,MAAM,aAE3F,oCACI,yBAAKT,UAAWG,KAAEuL,OACd,yBAAK1L,UAAWG,KAAEyE,MAAlB,QAGA,yBAAK5E,UAAWG,KAAEiH,OAAlB,eAGA,yBAAKpH,UAAWG,KAAEyG,SAAlB,WAGA,yBAAK5G,UAAWG,KAAE0G,KAAlB,OAGA,yBAAK7G,UAAWG,KAAEkH,SACd,4BAAQlD,QA5DZ,WACZ9C,GPsDuB,SAACA,GAC5B+E,KACKlE,MAAK,SAACC,GACHd,EAdkB,CAAC5B,KAAM,gBAgB5ByC,KAAKb,EAAS0F,YOAC,SAGR,6BACK+D,EAAS7B,KAAI,SAAC0C,EAAGC,GAAJ,OAAc,kBAAC,GAAD,CAAMlL,IAAKkL,EAAOnF,IAAKkF,EAAElF,IACtBK,OAAQ6E,EAAE7E,OAAQlC,KAAM+G,EAAE/G,KAAM+B,WAAYgF,EAAEhF,WAC9CC,QAAS+E,EAAE/E,QAASC,IAAK8E,EAAE9E,a,wCC7EjEgF,GAAO,SAAC3E,GAEjB,OACI,yBAAKlH,UAAWG,KAAEqL,MAEd,oCACI,yBAAKxL,UAAWG,KAAEgH,UACd,yBAAKnH,UAAWG,KAAE2L,UACb5E,EAAM4E,UAEX,yBAAK9L,UAAWG,KAAE4L,QACb7E,EAAM6E,QAEX,yBAAK/L,UAAWG,KAAE6L,OACb9E,EAAM8E,OAEX,yBAAKhM,UAAWG,KAAEyG,SACbM,EAAMN,SAEX,yBAAK5G,UAAWG,KAAEkH,SACd,uCACA,+CChClBvI,GAAWC,IAAMC,OAAO,CAC1BC,QAAS,6BACTC,iBAAiB,IAGR+M,GAAW,SACXC,GACL,OAAOpN,GAASuH,IAAT,mCAAyC6F,KCYlD5M,GAAiC,CACnC6M,MAAO,CAAC,CACJJ,OAAQ,SACRK,aAAc,IACdC,SAAU,GACVC,QAAS,MACTN,MAAO,EACPF,SAAU,OACVS,YAAa,MACbC,OAAQ,EACRC,MAAO,EACPhN,KAAM,OACNmH,QAAS,MACT8F,QAAS,SAqBJC,GAAa,SAACT,GAAD,OAAiB,SAAC7K,GACxC4K,GAAkBC,GACbhK,MAAK,SAACC,GACHd,EANoC,CAAC5B,KAAM,YAAa0M,MAMtChK,EAAI/C,KAAK+M,aC9C1BS,GAAQ,SAAC1F,GAClB,IAAM7F,EAAWC,cAEX6K,EAAQ5K,aAA+C,SAAAC,GAAK,OAAIA,EAAM2K,MAAMA,SAE3E5F,EAAMT,cAANS,GAMP,OAJAxC,qBAAU,WACN1C,EAASsL,GAAWpG,MACrB,CAAClF,IAGA,yBAAKrB,UAAWG,KAAEqL,MAEd,oCACI,yBAAKxL,UAAWG,KAAEuL,OACd,yBAAK1L,UAAWG,KAAE2L,UAAlB,YAGA,yBAAK9L,UAAWG,KAAE4L,QAAlB,UAGA,yBAAK/L,UAAWG,KAAE6L,OAAlB,SAGA,yBAAKhM,UAAWG,KAAEyG,SAAlB,WAGA,yBAAK5G,UAAWG,KAAEkH,SACd,yCAGR,6BACK8E,EAAMlD,KAAI,SAAA4D,GAAC,OAAI,kBAAC,GAAD,CAAMf,SAAUe,EAAEf,SAAUC,OAAQc,EAAEd,OAAQnF,QAASiG,EAAEjG,QACnDwF,aAAcS,EAAET,aAAcJ,MAAOa,EAAEb,MAAOU,QAASG,EAAEH,iB,oBCrC7FI,GAAU,SAACX,GACb,IAAMY,EAAMZ,EAAMa,QAAO,SAACC,EAAKC,GAAN,OAAeD,GAAO,EAAIC,EAAKlB,QAAU,EAAIkB,EAAKlB,SAAQ,GAC7EmB,EAAOC,KAAKC,SAAWN,EACvB5K,EAAMgK,EAAMa,QAAO,SAACC,EAAkCC,EAAM3E,GAC1D,IAAM+E,EAASL,EAAIF,KAAO,EAAIG,EAAKlB,QAAU,EAAIkB,EAAKlB,OACtD,MAAO,CAACe,IAAKO,EAAQ/G,GAAI+G,EAASH,EAAO5E,EAAI0E,EAAI1G,MAEnD,CAACwG,IAAK,EAAGxG,IAAK,IAGpB,OAFAnE,QAAQC,IAAI,SAAU0K,EAAKI,EAAMhL,GAE1BgK,EAAMhK,EAAIoE,GAAK,IAIbgH,GAAQ,WACjB,IAAMlM,EAAWC,cAEX6K,EAAQ5K,aAA+C,SAAAC,GAAK,OAAIA,EAAM2K,MAAMA,SAH3D,EAKGxI,oBAAkB,GALrB,mBAKhB6J,EALgB,KAKTC,EALS,OAMC9J,mBAAmB,CACvC+I,QAAS,GACT9F,QAAS,GACTnH,KAAM,GACNgN,MAAO,EACPD,OAAQ,EACRD,YAAa,GACbT,SAAU,GACVE,MAAO,EACPM,QAAS,GACTD,SAAU,GACVD,aAAc,GACdL,OAAQ,KAlBW,mBAMhBmB,EANgB,KAMVQ,EANU,OAoBW/J,oBAAkB,GApB7B,mBAoBhBgK,EApBgB,KAoBLC,EApBK,KAuBhBrH,EAAMT,cAANS,GAEPxC,qBAAU,WACFyJ,IACAnM,EAASsL,GAAWpG,IACpBkH,GAAS,IAGTtB,EAAMvD,OAAS,GAAG8E,EAAQZ,GAAQX,MACvC,CAAC9K,EAAUkF,EAAI4F,EAAOqB,IAczB,OACI,yBAAKxN,UAAWG,KAAEsC,QACd,0CACeyK,EAAKpB,UAEpB,6BACI,kBAAC,EAAD,CAAQ3H,QAjBC,WACjByJ,GAAa,KAgBL,UAEHD,EACG,yBAAK3N,UAAWG,KAAEsC,QAAlB,WACayK,EAAKnB,OACd,kBAAC,EAAD,CAAQ5H,QAnBJ,WAChByJ,GAAa,GAETzB,EAAMvD,OAAS,GACf8E,EAAQZ,GAAQX,MAeR,SAEF,KCpEL0B,GACF,SADEA,GAED,UAFCA,GAGK,gBAHLA,GAIA,WAJAA,GAMM,qBANNA,GAOC,gCAPDA,GAQH,QARGA,GASF,SAGEC,GAAO,WAChB,OACI,6BACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAM,IAAKC,OAAK,EAACC,OAAQ,kBAAM,kBAAC,IAAD,CAAU3L,GAAIuL,QAGpD,kBAAC,IAAD,CAAOE,KAAMF,GAAYI,OAAQ,kBAAM,kBAAC,EAAD,SACvC,kBAAC,IAAD,CAAOF,KAAMF,GAAaI,OAAQ,kBAAM,kBAAC,GAAD,SACxC,kBAAC,IAAD,CAAOF,KAAMF,GAAmBI,OAAQ,kBAAM,kBAAC,EAAD,SAC9C,kBAAC,IAAD,CAAOF,KAAMF,GAAcI,OAAQ,kBAAM,kBAAC,EAAD,SACzC,kBAAC,IAAD,CAAOF,KAAMF,GAAoBI,OAAQ,kBAAM,kBAAC,GAAD,SAC/C,kBAAC,IAAD,CAAOF,KAAMF,GAAeI,OAAQ,kBAAM,kBAAC,GAAD,SAC1C,kBAAC,IAAD,CAAOF,KAAMF,GAAWI,OAAQ,kBAAM,kBAAC,GAAD,SACtC,kBAAC,IAAD,CAAOF,KAAMF,GAAYI,OAAQ,kBAAM,kBAAC,GAAD,SACvC,kBAAC,IAAD,CAAOF,KAAM,aAAcE,OAAQ,kBAAM,kBAAC,GAAD,SACzC,kBAAC,IAAD,CAAOF,KAAM,aAAcE,OAAQ,kBAAM,kBAAC,GAAD,SAEzC,kBAAC,IAAD,CAAOA,OAAQ,kBAAM,kBAAC,EAAD,YCvCxBC,GAAS,WAClB,OACI,6BACI,yBAAKlO,UAAWG,IAAEgO,KACd,yBAAKnO,UAAS,UAAKG,IAAEiJ,KAAP,YAAejJ,IAAEqH,SAC3B,kBAAC,IAAD,CAASlF,GAAIuL,GAAYtG,gBAAiBpH,IAAEqH,QAA5C,SACA,kBAAC,IAAD,CAASlF,GAAIuL,GAAatG,gBAAiBpH,IAAEqH,QAA7C,UACA,kBAAC,IAAD,CAASlF,GAAIuL,GAAmBtG,gBAAiBpH,IAAEqH,QAAnD,gBACA,kBAAC,IAAD,CAASlF,GAAIuL,GAActG,gBAAiBpH,IAAEqH,QAA9C,WACA,kBAAC,IAAD,CAASlF,GAAIuL,GAAoBtG,gBAAiBpH,IAAEqH,QAApD,qBACA,kBAAC,IAAD,CAASlF,GAAIuL,GAAetG,gBAAiBpH,IAAEqH,QAA/C,yBACA,kBAAC,IAAD,CAASlF,GAAIuL,GAAWtG,gBAAiBpH,IAAEqH,QAA3C,QACA,kBAAC,IAAD,CAASlF,GAAIuL,GAAYtG,gBAAiBpH,IAAEqH,QAA5C,SACA,kBAAC,IAAD,CAASlF,GAAI,aAAciF,gBAAiBpH,IAAEqH,QAA9C,SACA,kBAAC,IAAD,CAASlF,GAAI,aAAciF,gBAAiBpH,IAAEqH,QAA9C,aCJL4G,OATf,WACI,OACI,yBAAKpO,UAAU,OACX,kBAAC,GAAD,MACA,kBAAC,GAAD,QCIGqO,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBrM,MAAK,YAAkD,IAA/CsM,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,kBCTRhP,GAAe,CACjBuP,eAAe,GCUbC,GAAcC,aAAgB,CAChCC,IDLsB,WAAkE,IAAjExN,EAAgE,uDAAtClC,GAAciE,EAAwB,uCACvF,OAAQA,EAAO9D,MACX,IAAK,kBAEL,QACI,OAAO+B,ICCfC,MrCFwB,WAAkE,IAAjED,EAAgE,uDAAtClC,EAAciE,EAAwB,uCACzF,OAAQA,EAAO9D,MACX,IAAK,mBACD,OAAO,2BAAI+B,GAAX,IAAkBjC,WAAYgE,EAAO9C,QACzC,QACI,OAAOe,IqCFfkC,aAAcJ,EACd+B,OxBMyB,WAAkE,IAAjE7D,EAAgE,uDAAtClC,GAAciE,EAAwB,uCAC1F,OAAQA,EAAO9D,MACX,IAAK,+BACD,OAAO,2BAAI+B,GAAX,IAAkB0D,mBAAoB3B,EAAO9C,MAAOwC,QAASM,EAAON,UACxE,IAAK,4BACD,OAAO,2BAAIzB,GAAX,IAAkB0D,mBAAoB3B,EAAO9C,MAAOX,MAAOyD,EAAOzD,QACtE,QACI,OAAO0B,IwBZfsD,Q5BF0B,WAAkE,IAAjEtD,EAAgE,uDAAtClC,EAAciE,EAAwB,uCAC3F,OAAQA,EAAO9D,MACX,IAAK,oBACD,OAAO,2BAAI+B,GAAX,IAAkBmD,aAAcpB,EAAO9C,MAAOmE,KAAMrB,EAAOqB,OAC/D,IAAK,YACD,OAAO,2BAAIpD,GAAX,IAAkB1B,MAAOyD,EAAOzD,QACpC,QACI,OAAO0B,I4BJfkF,MlBmCwB,WAAkE,IAAjElF,EAAgE,uDAAtClC,GAAciE,EAAwB,uCACzF,OAAQA,EAAO9D,MACX,IAAK,YACD,OAAO,2BAAI+B,GAAX,IAAkBkF,MAAOnD,EAAOmD,QACpC,IAAK,WAEL,IAAK,cAEL,IAAK,cACD,OAAO,eAAIlF,GACf,QACI,OAAOA,IkB7Cf2K,MRwBwB,WAAkE,IAAjE3K,EAAgE,uDAAtClC,GAAciE,EAAwB,uCACzF,OAAQA,EAAO9D,MACX,IAAK,YACD,OAAO,2BAAI+B,GAAX,IAAkB2K,MAAO5I,EAAO4I,QAEpC,QACI,OAAO3K,IQ7BfqG,OhBPiC,WAAkE,IAAjErG,EAAgE,uDAAtClC,GAAciE,EAAwB,uCAClG,OAAQA,EAAO9D,MACX,IAAK,iBACD,OAAO,2BAAI+B,GAAX,IACIiG,WAAYlE,EAAOkE,aAE3B,IAAK,SACD,OAAO,2BAAIjG,GAAX,IACIkG,QAASnE,EAAO4E,UAExB,IAAK,YACD,OAAO,2BAAI3G,GAAX,IAAkB1B,MAAOyD,EAAOzD,QACpC,QACI,OAAO0B,MgBFNyN,GAAQC,aAAYJ,GAAaK,aAAgBC,OCd9DtF,IAASmE,OACL,kBAAC,IAAMoB,WAAP,KACI,kBAAC,IAAD,CAAUJ,MAAOA,IACb,kBAAC,IAAD,KACI,kBAAC,GAAD,SAKZzF,SAAS8F,eAAe,SAM5BjB,O","file":"static/js/main.4050ae70.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableRow\":\"Pack_tableRow__2nFYq\",\"name\":\"Pack_name__12ozk\",\"count\":\"Pack_count__reJoz\",\"updated\":\"Pack_updated__2aKbP\",\"url\":\"Pack_url__37kkK\",\"buttons\":\"Pack_buttons__XH6kS\",\"link\":\"Pack_link__dM6f0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Packs_table__3JGet\",\"wrap\":\"Packs_wrap__35LXe\",\"flexWrap\":\"Packs_flexWrap__391OR\",\"name\":\"Packs_name__3dxuA\",\"count\":\"Packs_count__2Sa30\",\"updated\":\"Packs_updated__aBjlM\",\"url\":\"Packs_url__1ucYC\",\"buttons\":\"Packs_buttons__3yuQB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registration\":\"Registration_registration__1iFH0\",\"center\":\"Registration_center__3nMDe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ModalOverlay\":\"modal_ModalOverlay__EOp-0\",\"ModalContent\":\"modal_ModalContent__2d-XI\",\"modalWindow\":\"modal_modalWindow__2dMdW\",\"modalHeader\":\"modal_modalHeader__3iE7n\",\"title\":\"modal_title__2NVZ2\",\"modalBody\":\"modal_modalBody__8mVOZ\",\"modalFooter\":\"modal_modalFooter__2yMaB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Cards_table__2HK9H\",\"wrap\":\"Cards_wrap__3ysfb\",\"flexWrap\":\"Cards_flexWrap__1pLkb\",\"question\":\"Cards_question__1oF4-\",\"answer\":\"Cards_answer__2CBWb\",\"grade\":\"Cards_grade__upGN0\",\"updated\":\"Cards_updated__23MxP\",\"url\":\"Cards_url__12fmw\",\"buttons\":\"Cards_buttons__NczFk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableRow\":\"Card_tableRow__3es2l\",\"question\":\"Card_question__h699S\",\"answer\":\"Card_answer__3AGUW\",\"grade\":\"Card_grade__30yyM\",\"updated\":\"Card_updated__a4_ul\",\"url\":\"Card_url__1atm-\",\"buttons\":\"Card_buttons__1ApHX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"Sort_select__1iXQ1\",\"mainTitle\":\"Sort_mainTitle__21-tU\",\"items\":\"Sort_items__2xk4q\",\"item\":\"Sort_item__2Twg4\",\"selected\":\"Sort_selected__2kaQA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"Input_superInput__174xK\",\"errorInput\":\"Input_errorInput__27RRa\",\"error\":\"Input_error__2R1Jq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forgotForm\":\"PasswordRecovery_forgotForm__2jq_Q\",\"center\":\"PasswordRecovery_center__185Y6\",\"requestMessage\":\"PasswordRecovery_requestMessage__2u9rZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginForm\":\"Login_loginForm__2gQv8\",\"center\":\"Login_center__1Ghxe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"Checkbox_checkbox__KZifb\",\"spanClassName\":\"Checkbox_spanClassName__1VoqI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"Button_default__220Zk\",\"red\":\"Button_red__1lSvL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"Profile_center__1U74I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"Learn_center__1jIX-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Search_search__MG4hP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Header_nav__2s9aO\",\"item\":\"Header_item__1ztzu\",\"active\":\"Header_active__18eHi\"};","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'http://localhost:7542/2.0/',\r\n    withCredentials: true,\r\n})\r\n\r\nexport type LoginParamsType = {\r\n    email: string\r\n    password: string\r\n    rememberMe?: boolean\r\n}\r\n\r\nexport const loginAPI = {\r\n    login(data: LoginParamsType) {\r\n        return instance.post('auth/login', data)\r\n    }\r\n}","import {loginAPI, LoginParamsType} from '../components/Main/Login/api-login';\r\nimport {Dispatch} from 'redux';\r\n\r\nconst initialState = {\r\n    isLoggedIn: false\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\ntype SetIsLoggedInType = ReturnType<typeof setIsLoggedIn>\r\ntype ActionsType = SetIsLoggedInType\r\n\r\nexport const loginReducer = (state: InitialStateType = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case 'SET_IS_LOGGED_IN':\r\n            return {...state, isLoggedIn: action.value}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst setIsLoggedIn = (value: boolean) => ({type: 'SET_IS_LOGGED_IN', value} as const)\r\n\r\nexport const loginTC = (data: LoginParamsType) => (dispatch: Dispatch<ActionsType>) => {\r\n    loginAPI.login(data)\r\n        .then((res) => {\r\n            dispatch(setIsLoggedIn(true))\r\n            console.log('login ok')\r\n        })\r\n}\r\n\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\nimport s from \"./Input.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n};\n\nconst Input: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value);\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        e.key === \"Enter\" // если нажата кнопка Enter\n        && onEnter // и есть пропс onEnter\n        && onEnter(); // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n    const finalInputClassName = `${error ? s.errorInput : s.superInput}`; // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={\"text\"}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    );\n}\n\nexport default Input;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./Checkbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n};\n\nconst Checkbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // сделайте так чтоб работал onChange и onChangeChecked\n        onChange && onChange(e);\n        if(onChangeChecked) {\n            onChangeChecked(e.currentTarget.checked);\n        }\n\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n    return (\n        <label>\n            <input\n                type={\"checkbox\"}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    );\n}\n\nexport default Checkbox;\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./Button.module.css\";\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst Button: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    );\n}\n\nexport default Button;\n","import React from 'react'\r\nimport {useFormik} from 'formik';\r\nimport s from './Login.module.css'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../../redux/store'\r\nimport {Redirect} from 'react-router-dom';\r\nimport {loginTC} from '../../../redux/login-reducer';\r\nimport Input from '../../common/Input/Input';\r\nimport Checkbox from '../../common/Checkbox/Checkbox';\r\nimport Button from '../../common/Button/Button';\r\n\r\nexport const Login = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(loginTC(values))\r\n        },\r\n    });\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <form onSubmit={formik.handleSubmit} className={s.loginForm}>\r\n\r\n                <div className={s.center}>\r\n                    <h3>Login</h3>\r\n                    <label>\r\n                        <Input\r\n                            type='email'\r\n                            placeholder='email'\r\n                            {...formik.getFieldProps('email')}\r\n                        />\r\n                    </label>\r\n                    <label>\r\n                        <Input\r\n                            type='password'\r\n                            placeholder='password'\r\n                            {...formik.getFieldProps('password')}\r\n                        />\r\n                    </label>\r\n                    <label>\r\n                        <Checkbox type='checkbox'\r\n                                  {...formik.getFieldProps('rememberMe')}\r\n                        /> Remember me\r\n                    </label>\r\n                    <Button type=\"submit\">Sign in</Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n\r\n    )\r\n}","import axios from \"axios\";\r\n\r\nconst instans = axios.create({\r\n    baseURL: 'http://localhost:7542/2.0/',\r\n    withCredentials: true,\r\n})\r\n// baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\nexport type RegistrationParamsType = {\r\n    email: string\r\n    password: string\r\n}\r\n\r\nexport const RegistrationApi = {\r\n    setUser(email: string, password: string){\r\n        return instans.post('auth/register',{email,password})\r\n    },\r\n    deleteUser(){\r\n\r\n        return instans.delete('auth/me')\r\n    }\r\n}\r\nexport const SetNewPass = {\r\n    set(password:string,resetPasswordToken:string){\r\n        return instans.post(`auth/set-new-password`,{password,resetPasswordToken})\r\n    }\r\n}","import {Dispatch} from \"redux\";\r\nimport {RegistrationApi, SetNewPass} from \"../Api\";\r\n\r\n\r\nexport type  initialStateType = {\r\n    email: string\r\n    password: string\r\n    error: string\r\n    message: string\r\n    registeredStatus: boolean | null\r\n}\r\ntype registrationACType = ReturnType<typeof registrationAC>\r\ntype answerRequestACType = ReturnType<typeof answerRequestAC>\r\ntype succesRequestACType = ReturnType<typeof succesRequestAC>\r\ntype actionType = registrationACType | answerRequestACType | succesRequestACType\r\nlet initialState: initialStateType = {\r\n    email: '',\r\n    password: '',\r\n    error: '',\r\n    message: '',\r\n    registeredStatus: null\r\n}\r\nconst registerReduser = (state = initialState, action: actionType): initialStateType => {\r\n    switch (action.type) {\r\n        case 'REGISTRATION':\r\n            return {\r\n                ...state,\r\n                email: action.email,\r\n                password: action.password,\r\n            }\r\n        case \"SUCCESHOST\":\r\n            return {\r\n                ...state,\r\n                message: action.message,\r\n                registeredStatus: true\r\n            }\r\n        case \"ERRORHOST\":\r\n            return {\r\n                ...state,\r\n                error: action.errorText,\r\n                registeredStatus: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const registrationAC = (email: string, password: string) => ({type: 'REGISTRATION', email, password} as const)\r\nexport const answerRequestAC = (errorText: string) => ({type: 'ERRORHOST', errorText} as const)\r\nexport const succesRequestAC = (message:string) => ({type: 'SUCCESHOST',message} as const)\r\nexport const registrationTC = (email: string, password: string) => (dispatch: Dispatch) => {\r\n        RegistrationApi.setUser(email, password)\r\n            .then(res => {\r\n                console.log(res.data);\r\n                console.log(res.statusText);\r\n                let message = res.statusText\r\n                dispatch(registrationAC(email, password))\r\n                dispatch(succesRequestAC(message))\r\n            }).catch((err) => {\r\n\r\n            // let errorText =  err.toString();\r\n            dispatch(answerRequestAC(err.response.data.error));\r\n            // console.log(errorText);\r\n        })\r\n    }\r\nexport const deleteAccTC = () => (dispatch: Dispatch) =>{\r\n\r\n    RegistrationApi.deleteUser()\r\n        .then(res=>{\r\n\r\n            console.log(res);\r\n            // dispatch(succesRequestAC(message))\r\n        }).catch(err=>{\r\n            alert(err)\r\n    })\r\n}\r\nexport const setNewPassTC = (pass:string,token:string) => (dispatch: Dispatch) =>{\r\n\r\n    SetNewPass.set(pass, token)\r\n        .then(res=>{\r\n\r\n            console.log(res);\r\n            let message = res.statusText\r\n            dispatch(succesRequestAC(message))\r\n        }).catch(err=>{\r\n            // alert(err)\r\n        dispatch(answerRequestAC(err.response.data.error));\r\n    })\r\n}\r\n\r\nexport default registerReduser;","import React, {useEffect, useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {deleteAccTC, registrationTC} from \"../../../redux/registration-reduser\";\r\nimport Input from \"../../common/Input/Input\";\r\nimport Button from \"../../common/Button/Button\";\r\nimport {AppRootStateType} from \"../../../redux/store\";\r\nimport cl from './Registration.module.css';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nexport const Registration = () => {\r\n    const dispatch = useDispatch()\r\n    const errorMessage = useSelector<AppRootStateType, string>((state) => state.registration.error)\r\n    const message = useSelector<AppRootStateType, string>((state) => state.registration.message)\r\n    const registeredStatus = useSelector<AppRootStateType, boolean | null>((state) => state.registration.registeredStatus)\r\n    let [password, setPassword] = useState<string>('')\r\n    let [email, setEmail] = useState<string>('')\r\n    let [error, setError] = useState<string>('')\r\n\r\n\r\n    useEffect(() => {\r\n        if (registeredStatus) {\r\n            if (error === '') {\r\n                setEmail('')\r\n                setPassword('')\r\n            }\r\n        }\r\n    }, [registeredStatus])\r\n\r\n    const onSendHandlerEmail = (text: string) => {\r\n\r\n        if (text.trim()) {\r\n            setError('')\r\n            setEmail(text)\r\n        }\r\n        // else {\r\n        //     setError('email is required')\r\n        // }\r\n    }\r\n    const onSendHandlerPassw = (text: string) => {\r\n        if (text.trim()) {\r\n            setPassword(text)\r\n        }\r\n        // else {\r\n        //     setError('password is required')\r\n        // }\r\n\r\n    }\r\n    const onClick = () => {\r\n\r\n        dispatch(registrationTC(email, password))\r\n\r\n\r\n    }\r\n\r\n    // login: jhbjhj@mijni.ruj password: 12345678\r\n    if (registeredStatus) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n    return (\r\n        <div className={cl.registration}>\r\n            <div className={cl.center}>\r\n                <h3>Registration</h3>\r\n                <>\r\n                    <Input placeholder={'email'} type={'email'} onChangeText={onSendHandlerEmail}\r\n                           className={'default'} error={error} value={email}/>\r\n                </>\r\n                <>\r\n                    <Input placeholder={'password'} type={'password'} onChangeText={onSendHandlerPassw}\r\n                           className={'default'} error={error} value={password}/>\r\n                </>\r\n                <Button onClick={onClick}>send</Button>\r\n\r\n                {registeredStatus ? <p>{message}</p> : <p>{errorMessage}</p>}\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'http://localhost:7542/2.0/',\r\n    withCredentials: true,\r\n})\r\n\r\nexport type ProfileParamsType = {}\r\n\r\nexport const profileAPI = {\r\n    getProfile() {\r\n        return instance.post('auth/me', {})\r\n    }\r\n}","import {Dispatch} from 'redux';\r\nimport {profileAPI} from '../components/Main/Profile/api-profile';\r\n\r\nconst initialState = {\r\n    isAuthorized: false,\r\n    name: '',\r\n    error: ''\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\ntype SetIsAuthorizedType = ReturnType<typeof setIsAuthorized>\r\ntype SetError = ReturnType<typeof setError>\r\ntype ActionsType = SetIsAuthorizedType | SetError\r\n\r\nexport const profileReducer = (state: InitialStateType = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case 'SET_IS_AUTHORIZED':\r\n            return {...state, isAuthorized: action.value, name: action.name}\r\n        case 'SET_ERROR':\r\n            return {...state, error: action.error}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst setIsAuthorized = (value: boolean, name: string) => ({type: 'SET_IS_AUTHORIZED', value, name} as const)\r\nconst setError = (error: string) => ({type: 'SET_ERROR', error} as const)\r\n\r\n\r\nexport const profileTC = () => (dispatch: Dispatch<ActionsType>) => {\r\n    profileAPI.getProfile()\r\n        .then((res) => {\r\n            dispatch(setIsAuthorized(true, res.data.name))\r\n        })\r\n        .catch((err) => {\r\n            if(err.response){\r\n                dispatch(setError(err.response.data.error))\r\n            }\r\n        })\r\n}\r\n\r\n","import React, {useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {profileTC} from '../../../redux/profile-reducer';\r\nimport {AppRootStateType} from '../../../redux/store';\r\nimport s from './Profile.module.css'\r\n\r\nexport const Profile = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const error = useSelector<AppRootStateType, string>(state => state.profile.error)\r\n    const isAuthorized = useSelector<AppRootStateType, boolean>(state => state.profile.isAuthorized)\r\n\r\n    useEffect(() => {\r\n        dispatch(profileTC())\r\n    }, [dispatch])\r\n\r\n    const userName = useSelector<AppRootStateType, string>(state => state.profile.name)\r\n\r\n    if(isAuthorized) {\r\n        return (\r\n            <div className={s.center}>\r\n                User name: {userName}\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.center}>\r\n            {error}\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const Error404 = () => {\r\n    return (\r\n        <>\r\n            Error404\r\n        </>\r\n    )\r\n}","import axios from 'axios';\r\nimport {LoginParamsType} from '../Login/api-login';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    withCredentials: true,\r\n})\r\n\r\nexport type ForgotParamsType = {\r\n\r\n}\r\n\r\nexport const forgotAPI = {\r\n    forgot(data: ForgotParamsType) {\r\n        return instance.post('auth/forgot', data)\r\n    }\r\n}","import {Dispatch} from 'redux';\r\nimport {forgotAPI, ForgotParamsType} from '../components/Main/PasswordRecovery/api-forgot';\r\n\r\ntype InitialStateType = {\r\n    newPasswordRequest: newPasswordRequestType\r\n    message: string\r\n    error: string\r\n}\r\n\r\nexport type newPasswordRequestType = 'success' | 'fail' | null\r\n\r\nconst initialState = {\r\n    newPasswordRequest: null,\r\n    message: '',\r\n    error: ''\r\n}\r\n\r\ntype NewPasswordRequestSuccessType = ReturnType<typeof newPasswordRequestSuccess>\r\ntype NewPasswordRequestFailType = ReturnType<typeof newPasswordRequestFail>\r\ntype ActionsType = NewPasswordRequestSuccessType | NewPasswordRequestFailType\r\n\r\nexport const forgotReducer = (state: InitialStateType = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case 'NEW_PASSWORD_REQUEST_SUCCESS':\r\n            return {...state, newPasswordRequest: action.value, message: action.message}\r\n        case 'NEW_PASSWORD_REQUEST_FAIL':\r\n            return {...state, newPasswordRequest: action.value, error: action.error}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nconst newPasswordRequestSuccess = (value: newPasswordRequestType, message: string) =>\r\n    ({type: 'NEW_PASSWORD_REQUEST_SUCCESS', value, message} as const)\r\nconst newPasswordRequestFail = (value: newPasswordRequestType, error: string) =>\r\n    ({type: 'NEW_PASSWORD_REQUEST_FAIL', value, error} as const)\r\n\r\nexport const forgotTC = (data: ForgotParamsType) => (dispatch: Dispatch<ActionsType>) => {\r\nforgotAPI.forgot(data)\r\n    .then((res) => {\r\n        let message = res.data.info\r\n        dispatch(newPasswordRequestSuccess('success', message))\r\n    })\r\n    .catch((err) => {\r\n        dispatch(newPasswordRequestFail('fail', err.response.data.error))\r\n    })\r\n}","import React from 'react'\r\nimport {useFormik} from 'formik';\r\nimport s from './PasswordRecovery.module.css';\r\nimport Input from '../../common/Input/Input';\r\nimport Button from '../../common/Button/Button';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {forgotTC, newPasswordRequestType} from '../../../redux/forgot-reducer';\r\nimport {AppRootStateType} from '../../../redux/store';\r\n\r\nexport const PasswordRecovery = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const newPasswordRequest = useSelector<AppRootStateType, newPasswordRequestType>(state => state.forgot.newPasswordRequest)\r\n    const requestMessage = useSelector<AppRootStateType, string>(state => state.forgot.message)\r\n    const errorMessage = useSelector<AppRootStateType, string>(state => state.forgot.error)\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            from: 'test-front-admin <ai73a@yandex.by>',\r\n            message: `<div style=\"background-color: lime; padding: 15px\"> \r\npassword recovery link:\r\n <a href='http://localhost:3000/cards#/entering-new-password/$token$'> link</a></div>`,\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(forgotTC(values))\r\n        },\r\n    });\r\n\r\n    if(requestMessage !== '') {\r\n        return (\r\n            <div className={s.requestMessage}>{requestMessage}</div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={formik.handleSubmit} className={s.forgotForm}>\r\n\r\n                <div className={s.center}>\r\n                    <h3>Password Recovery</h3>\r\n                    <label>\r\n                        <Input\r\n                            type='email'\r\n                            placeholder='email'\r\n                            {...formik.getFieldProps('email')}\r\n                        />\r\n                    </label>\r\n                    <Button type=\"submit\">Send</Button>\r\n                    {errorMessage !== '' ? <div>{errorMessage}</div> : ''}\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React, {useEffect, useState} from 'react'\r\nimport cl from \"../Registration/Registration.module.css\";\r\nimport Input from \"../../common/Input/Input\";\r\nimport Button from \"../../common/Button/Button\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../redux/store\";\r\nimport {registrationTC, setNewPassTC} from \"../../../redux/registration-reduser\";\r\nimport {Redirect, useParams } from 'react-router-dom';\r\n\r\n\r\nexport const EnteringNewPassword = () => {\r\n    const dispatch = useDispatch()\r\n    const errorMessage = useSelector<AppRootStateType, string>((state) => state.registration.error)\r\n    const message = useSelector<AppRootStateType, string>((state) => state.registration.message)\r\n    const registeredStatus = useSelector<AppRootStateType, boolean | null>((state) => state.registration.registeredStatus)\r\n    let [password, setPassword] = useState<string>('')\r\n    let [password1, setPassword1] = useState<string>('')\r\n    let [error, setError] = useState<string>('')\r\nlet [messages,setMessages]=useState<string>(message)\r\n\r\n    const onSendHandlerPass = (text: string) => {\r\n        if (text.trim()) {\r\n            setError('')\r\n            setPassword(text)\r\n        }\r\n    }\r\n    const onSendHandlerPass1 = (text: string) => {\r\n        if (text.trim()) {\r\n            setPassword1(text)\r\n        }\r\n    }\r\n    // @ts-ignore\r\n        const { token } = useParams();\r\n    const onClickHandler = () => {\r\n        if(password !== password1){\r\n            setError('пароли не совпадают')\r\n            setPassword1('')\r\n        }else{\r\n            dispatch(setNewPassTC(password, token))\r\n        }\r\n    }\r\n\r\n// if(!messages){\r\n//    return <Redirect to={'/packs'}/>\r\n//    setTimeout(()=> {\r\n//        setMessages('')\r\n//    },3000)\r\n//}\r\n    return (\r\n        <div className={cl.registration}>\r\n            <div className={cl.center}>\r\n           <h6> Entering New Password</h6>\r\n                <>\r\n                    <Input placeholder={'password'} type={'text'} onChangeText={onSendHandlerPass}\r\n                           className={'default'} error={error} value={password}/>\r\n                </>\r\n                <>\r\n                    <Input placeholder={'repeat password'} type={'text'} onChangeText={onSendHandlerPass1}\r\n                           className={'default'} error={error} value={password1}/>\r\n                </>\r\n                <Button onClick={onClickHandler}>send</Button>\r\n\r\n                {registeredStatus ? <p>{message}</p> : <p>{errorMessage}</p>}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport Input from './common/Input/Input';\r\nimport Button from './common/Button/Button';\r\nimport Checkbox from './common/Checkbox/Checkbox';\r\n\r\nexport const Test = () => {\r\n    return (\r\n        <>\r\n            <Input />\r\n            <Button>super button</Button>\r\n            <Checkbox />\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport cl from '../Registration/Registration.module.css';\r\nimport Button from '../../common/Button/Button';\r\nimport {deleteAccTC} from '../../../redux/registration-reduser';\r\nimport {useDispatch} from 'react-redux';\r\n\r\n\r\nexport const Logout = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const deleteAcc = () => {\r\n\r\n        dispatch(deleteAccTC())\r\n    }\r\n\r\n    return (\r\n        <div className={cl.registration}>\r\n            <div className={cl.center}>\r\n                <h3>if you want to delete your account</h3>\r\n                <Button onClick={deleteAcc}>click me</Button>\r\n                <p>joke,it's logout</p>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'http://localhost:7542/2.0/',\r\n    withCredentials: true,\r\n})\r\n\r\nexport const packsAPI = {\r\n    getPacks() {\r\n        return instance.get('/cards/pack?pageCount=8')\r\n    },\r\n    addPack() {\r\n        let cardsPack = {cardsPack: {name: 'NewPack'}}\r\n        return instance.post('cards/pack', cardsPack)\r\n    },\r\n    deletePack(id: string) {\r\n        return instance.delete(`cards/pack?id=${id}`)\r\n    },\r\n    updatePack(id: string) {\r\n        return instance.put('cards/pack', {cardsPack: {_id: id}})\r\n    }\r\n}","import {Action, Dispatch} from 'redux';\r\nimport {packsAPI} from '../components/Main/Packs/api-packs';\r\nimport {ThunkAction} from 'redux-thunk';\r\nimport {AppRootStateType} from './store';\r\n\r\nexport type PackType = {\r\n    _id: string\r\n    userId: string\r\n    name: string\r\n    cardsCount: number\r\n    updated: string\r\n    url: string\r\n}\r\ntype InitialStateType = {\r\n    packs: Array<PackType>\r\n}\r\n\r\n\r\nconst initialState: InitialStateType = {\r\n    packs: [\r\n        {\r\n            _id: '123',\r\n            cardsCount: 5,\r\n            name: 'Some name',\r\n            updated: 'never',\r\n            url: '111111',\r\n            userId: '321'\r\n        },\r\n        {\r\n            _id: '12555',\r\n            cardsCount: 6,\r\n            name: 'Some name',\r\n            updated: 'never',\r\n            url: '111111',\r\n            userId: '321'\r\n        }, {\r\n            _id: '123888',\r\n            cardsCount: 7,\r\n            name: 'Some name',\r\n            updated: 'never',\r\n            url: '111111',\r\n            userId: '321'\r\n        }\r\n    ]\r\n}\r\n\r\ntype SetPacksType = ReturnType<typeof setPacks>\r\ntype AddPackType = ReturnType<typeof addPack>\r\ntype DeletePackType = ReturnType<typeof deletePack>\r\ntype UpdatePackType = ReturnType<typeof updatePack>\r\ntype ActionsType = SetPacksType | AddPackType | DeletePackType | UpdatePackType\r\n\r\nexport const packsReducer = (state: InitialStateType = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case 'SET_PACKS':\r\n            return {...state, packs: action.packs}\r\n        case 'ADD_PACK':\r\n            return {...state}\r\n        case 'DELETE_PACK':\r\n            return {...state}\r\n        case 'UPDATE_PACK':\r\n            return {...state}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setPacks = (packs: Array<PackType>) => ({type: 'SET_PACKS', packs} as const)\r\nexport const addPack = () => ({type: 'ADD_PACK'} as const)\r\nexport const deletePack = () => ({type: 'DELETE_PACK'} as const)\r\nexport const updatePack = () => ({type: 'UPDATE_PACK'} as const)\r\n\r\n\r\nexport const getPacksTC = () => (dispatch: Dispatch<ActionsType>) => {\r\n    packsAPI.getPacks()\r\n        .then((res) => {\r\n            dispatch(setPacks(res.data.cardPacks))\r\n        })\r\n}\r\nexport const addPackTC = () => (dispatch: any) => {\r\n    packsAPI.addPack()\r\n        .then((res) => {\r\n            dispatch(addPack())\r\n        })\r\n        .then(dispatch(getPacksTC()))\r\n}\r\n\r\n\r\nexport const deletePackTC = (id: string) => (dispatch: any) => {\r\n    packsAPI.deletePack(id)\r\n        .then((res) => {\r\n            dispatch(deletePack())\r\n        })\r\n        .then(dispatch(getPacksTC()))\r\n}\r\nexport const updatePackTC = (id: string) => (dispatch: any) => {\r\n    packsAPI.updatePack(id)\r\n        .then((res) => {\r\n            dispatch(updatePack())\r\n        })\r\n        .then(dispatch(getPacksTC()))\r\n}\r\n\r\n","import React from 'react'\r\nimport {useDispatch} from 'react-redux';\r\nimport s from './Pack.module.css'\r\nimport {deletePackTC, PackType, updatePackTC} from '../../../../redux/packs-reducer';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\nexport const Pack = (props: PackType) => {\r\n    const dispatch = useDispatch()\r\n\r\n    let deletePack = () => {\r\n        dispatch(deletePackTC(props._id))\r\n    }\r\n    let updatePack = () => {\r\n        dispatch(updatePackTC(props._id))\r\n    }\r\n\r\n    return (\r\n        <div className={s.tableRow}>\r\n            <div className={s.name}>\r\n                {props.name}\r\n            </div>\r\n            <div className={s.count}>\r\n                {props.cardsCount}\r\n            </div>\r\n            <div className={s.updated}>\r\n                {props.updated}\r\n            </div>\r\n            <div className={s.url}>\r\n                {props.url}\r\n            </div>\r\n            <div className={s.buttons}>\r\n                <button onClick={deletePack}>Del</button>\r\n                <button onClick={updatePack}>Update</button>\r\n                <NavLink className={s.link} to={`/cards/${props._id}`} activeClassName={s.active}>cards</NavLink>\r\n                <NavLink className={s.link} to={`/learn/${props._id}`} activeClassName={s.active}>learn</NavLink>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}","\r\nconst initialState = {\r\n    nameSearch: '',\r\n    error: '',\r\n    abcType: 'ABC',\r\n}\r\ntype InitialStateType = typeof initialState\r\ntype searchByNameACType = ReturnType<typeof searchByNameAC>\r\ntype sortByAbcACType = ReturnType<typeof sortByAbcAC>\r\ntype SetError = ReturnType<typeof setError>\r\ntype ActionsType = searchByNameACType | sortByAbcACType | SetError\r\n\r\nexport const filterOrSearchReducer = (state: InitialStateType = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case 'SEARCH_BY_NAME':\r\n            return {...state,\r\n                nameSearch: action.nameSearch\r\n            }\r\n        case 'SORT_A':\r\n            return {...state,\r\n                abcType: action.payload\r\n            }\r\n        case 'SET_ERROR':\r\n            return {...state, error: action.error}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const searchByNameAC = ( nameSearch: string) => ({type: 'SEARCH_BY_NAME', nameSearch} as const)\r\nexport const sortByAbcAC = ( payload: string) => ({type: 'SORT_A', payload} as const)\r\nconst setError = (error: string) => ({type: 'SET_ERROR', error} as const)\r\n\r\n\r\n\r\n","import React, {ChangeEvent, useState, KeyboardEvent} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport cl from './Search.module.css';\r\nimport {PackType} from '../../../../redux/packs-reducer';\r\nimport {searchByNameAC} from \"../../../../redux/filterOrSearch-reducer\";\r\nimport {AppRootStateType} from \"../../../../redux/store\";\r\n\r\n\r\nexport const Search = () => {\r\n    const dispatch = useDispatch()\r\n    // let [nameSearch, setNameSearch] = useState<string>('')\r\n    let nameSearch = useSelector<AppRootStateType,string>(state => state.search.nameSearch)\r\n    const onChangeHandler = (e:ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(searchByNameAC(e.currentTarget.value))\r\n    }\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        // setError(null);\r\n        if (e.charCode === 13) {\r\n            dispatch(searchByNameAC(e.currentTarget.value))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={cl.search}>\r\n            <input type=\"text\" value={nameSearch} onChange={onChangeHandler} onKeyPress={onKeyPressHandler} placeholder={'search'}/>\r\n            {/*<button>Search</button>*/}\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, useState, KeyboardEvent, useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport cl from './Sort.module.css';\r\nimport {PackType} from '../../../../redux/packs-reducer';\r\nimport {searchByNameAC, sortByAbcAC} from \"../../../../redux/filterOrSearch-reducer\";\r\nimport {AppRootStateType} from \"../../../../redux/store\";\r\n\r\ntype ItemType = {\r\n    title: string\r\n    value: any\r\n}\r\ntype SelectType = {\r\n    items: ItemType[]\r\n}\r\nexport const Sort = (props:SelectType) => {\r\n    const dispatch = useDispatch()\r\n    let value = useSelector<AppRootStateType,string>(state => state.search.abcType)\r\n    const [active, setActive] = useState(false);\r\n    const [hoverEL, setHoverEL] = useState(value);\r\n    const onChange =(value:string)=>{\r\n        dispatch(sortByAbcAC(value))\r\n    }\r\n    const selectedItem = props.items.find(i => i.value === value)\r\n    const hoveredItem = props.items.find(i => i.value === hoverEL)\r\n\r\n    useEffect(() => {\r\n        setHoverEL(value);\r\n    }, [value])\r\n\r\n    const showActive = () => { setActive(!active) }\r\n    const itemClicked = (value: any) => {\r\n        onChange(value);\r\n        showActive();\r\n    }\r\n    const onKeyUp = (e: KeyboardEvent<HTMLDivElement>) => {\r\n        if (e.key === 'ArrowDown' || e.key === 'ArrowUp') {\r\n            for (let i = 0; i < props.items.length; i++) {\r\n                if (props.items[i].value === hoverEL) {\r\n                    const pretendentElement = e.key === 'ArrowDown' ? props.items[i + 1] : props.items[i - 1];\r\n                    if (pretendentElement) {\r\n                        onChange(pretendentElement.value)\r\n                        setHoverEL(props.items[i+1].value);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            if (!selectedItem) {\r\n                onChange(props.items[0].value);\r\n            }\r\n        }\r\n        if (e.key === 'Enter' || e.key === 'Escape') {\r\n            setActive(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div  className={cl.select} onKeyUp={onKeyUp} tabIndex={0}>\r\n            <h3 onClick={showActive} className={cl.mainTitle}>{selectedItem && selectedItem.title}</h3>\r\n            {active &&\r\n            <div className={cl.items}>\r\n                {props.items.map(i =>\r\n                    <div key={i.value}\r\n                         onMouseEnter={() => { setHoverEL(i.value) }}\r\n                         onClick={() => {  itemClicked(i.value) }}\r\n                         className={cl.item + (hoveredItem === i ? cl.selected : '')} >\r\n                        {i.title}\r\n                    </div>)}\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}","import {Component} from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nclass Portal extends Component<any, any>{\r\n    el = document.createElement('div')\r\n    componentDidMount() {\r\n        document.body.appendChild(this.el)\r\n    }\r\n    componentWillUnmount() {\r\n        document.body.removeChild(this.el)\r\n    }\r\n    render() {\r\n        const {children}=this.props\r\n        return ReactDOM.createPortal(children, this.el)\r\n    }\r\n}\r\nexport default Portal","import React from 'react';\r\nimport cl from './modal.module.css';\r\nimport Portal from './Portal';\r\n\r\ntype propsType = {\r\n    modalHeader?: string\r\n    modalFooter?: string\r\n    collaps: boolean\r\n    onCansel: () => void\r\n    children: any\r\n}\r\nconst defaultProps: propsType = {\r\n    modalHeader: 'some Title',\r\n    modalFooter: '',\r\n    collaps: false ,\r\n    onCansel: () => {},\r\n    children: null,\r\n}\r\nexport const ExampleModal = (props = defaultProps) => {\r\n    const onChange=()=>{\r\n        props.onCansel()\r\n    }\r\n    return (\r\n        <>{props.collaps &&\r\n        <Portal>\r\n            <div className={cl.ModalOverlay} >\r\n                <div className={cl.ModalContent}>\r\n                    <div className={cl.modalWindow}>\r\n                        <div className={cl.modalHeader}>\r\n                            <div className={cl.title}><h3>{props.modalHeader}</h3></div>\r\n                            <p onClick={onChange} style={{float: 'right'}}>x</p>\r\n                        </div>\r\n                        <div className={cl.modalBody}>\r\n                            {props.children}\r\n                        </div>\r\n                        <div className={cl.modalFooter}>\r\n                            {props.modalFooter}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Portal>\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\n","import React, {useEffect, useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport s from './Packs.module.css'\r\nimport {AppRootStateType} from '../../../redux/store';\r\nimport {addPackTC, getPacksTC, PackType} from '../../../redux/packs-reducer';\r\nimport {Pack} from './Pack/Pack';\r\nimport {profileTC} from '../../../redux/profile-reducer';\r\nimport {Search} from \"./search/Search\";\r\nimport {Sort} from \"./sort/Sort\";\r\nimport {ExampleModal} from \"../modal/EampleModal\";\r\n\r\n\r\nexport const Packs = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const packs = useSelector<AppRootStateType, Array<PackType>>(state => state.packs.packs)\r\n    const nameSearch = useSelector<AppRootStateType, string>(state => state.search.nameSearch)\r\n    const abcType = useSelector<AppRootStateType, string>(state => state.search.abcType)\r\n    const isAuthorized = useSelector<AppRootStateType, boolean>(state => state.profile.isAuthorized)\r\n\r\n    useEffect(() => {\r\n        dispatch(getPacksTC())\r\n    }, [])\r\n\r\n    const addPack = () => {\r\n        dispatch(addPackTC())\r\n    }\r\n\r\n    let ollPacks = packs\r\n    if(nameSearch){\r\n        ollPacks= packs.filter(pack=> pack.name.includes(nameSearch) )\r\n    }\r\n    if(abcType==='ABC') {\r\n\r\n       ollPacks= [...ollPacks].sort((a, b) => {\r\n            if (a.name > b.name) {return 1}\r\n            if (a.name < b.name) {return -1}\r\n            return 0\r\n            })\r\n\r\n        console.log(ollPacks);\r\n    }\r\n    if(abcType==='CBA') {\r\n        ollPacks= ollPacks.sort((a, b) => {\r\n            if (a.name < b.name) {return 1}\r\n            if (a.name > b.name) {return -1}\r\n            return 0\r\n        })\r\n\r\n    }\r\n    let [popupId, setPopupId] = useState('')\r\n    let [collaps, setcollaps] = useState(false)\r\n    const onCansel = () => {\r\n        setcollaps(!collaps)\r\n    }\r\n    const OnClickHandler = () =>{\r\n        setcollaps(!collaps)\r\n        setPopupId(\"3\")\r\n    }\r\n        if (true) {\r\n    return (\r\n        <div className={s.wrap}>\r\n            <div className={s.flexWrap}>\r\n                <button id='3' onClick={OnClickHandler}>open popup</button>\r\n                <ExampleModal collaps={collaps && popupId === '3'} onCansel={onCansel}\r\n                                     children={<h6>some text</h6>}/>\r\n                <Search/>\r\n                <Sort items={[{title:\"ABC\",value:\"ABC\"},{title:\"CBA\",value:\"CBA\"},{title:\"Rting\",value:\"Rting\"}]}/>\r\n            </div>\r\n            <>\r\n                <div className={s.table}>\r\n                    <div className={s.name}>\r\n                        Name\r\n                    </div>\r\n                    <div className={s.count}>\r\n                        Cards count\r\n                    </div>\r\n                    <div className={s.updated}>\r\n                        Updated\r\n                    </div>\r\n                    <div className={s.url}>\r\n                        Url\r\n                    </div>\r\n                    <div className={s.buttons}>\r\n                        <button onClick={addPack}>Add</button>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    {ollPacks.map((p, index) => <Pack key={index} _id={p._id}\r\n                                                   userId={p.userId} name={p.name} cardsCount={p.cardsCount}\r\n                                                   updated={p.updated} url={p.url}/>)\r\n                    }\r\n                </div>\r\n            </>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n    return (\r\n        <div className={s.center}>\r\n            you are not authorized /ᐠ-ꞈ-ᐟ\\\r\n        </div>\r\n    )\r\n\r\n\r\n}","import React from 'react'\r\nimport s from './Card.module.css'\r\n\r\ntype CardPropsType = {\r\n    answer: string\r\n    cardsPack_id: string\r\n    grade: number\r\n    question: string\r\n    updated: string\r\n    user_id: string\r\n}\r\n\r\n\r\nexport const Card = (props: CardPropsType) => {\r\n\r\n    return (\r\n        <div className={s.wrap}>\r\n\r\n            <>\r\n                <div className={s.tableRow}>\r\n                    <div className={s.question}>\r\n                        {props.question}\r\n                    </div>\r\n                    <div className={s.answer}>\r\n                        {props.answer}\r\n                    </div>\r\n                    <div className={s.grade}>\r\n                        {props.grade}\r\n                    </div>\r\n                    <div className={s.updated}>\r\n                        {props.updated}\r\n                    </div>\r\n                    <div className={s.buttons}>\r\n                        <button>Del</button>\r\n                        <button>Update</button>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        </div>\r\n    )\r\n}","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'http://localhost:7542/2.0/',\r\n    withCredentials: true,\r\n})\r\n\r\nexport const cardsAPI = {\r\n    getCards(packId: string) {\r\n        return instance.get(`/cards/card?cardsPack_id=${packId}`)\r\n    },\r\n}","import {Dispatch} from 'redux';\r\nimport {cardsAPI} from '../components/Main/Cards/api-cards';\r\n\r\nexport type CardType = {\r\n    answer: string\r\n    cardsPack_id: string\r\n    comments: string\r\n    created: string\r\n    grade: number\r\n    question: string\r\n    questionImg: string\r\n    rating: number\r\n    shots: number\r\n    type: string\r\n    updated: string\r\n    user_id: string\r\n}\r\ntype InitialStateType = {\r\n    cards: Array<CardType>\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n    cards: [{\r\n        answer: 'moloko',\r\n        cardsPack_id: '5',\r\n        comments: '',\r\n        created: '656',\r\n        grade: 3,\r\n        question: 'milk',\r\n        questionImg: ';;;',\r\n        rating: 2,\r\n        shots: 1,\r\n        type: 'card',\r\n        updated: '555',\r\n        user_id: '888'\r\n    }]\r\n}\r\n\r\ntype SetCardsType = ReturnType<typeof setCards>\r\n\r\ntype ActionsType = SetCardsType\r\n\r\nexport const cardsReducer = (state: InitialStateType = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case 'SET_CARDS':\r\n            return {...state, cards: action.cards}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setCards = (cards: Array<any>) => ({type: 'SET_CARDS', cards} as const)\r\n\r\n\r\nexport const getCardsTC = (packId: any) => (dispatch: Dispatch<ActionsType>) => {\r\n    cardsAPI.getCards(packId)\r\n        .then((res) => {\r\n            dispatch(setCards(res.data.cards))\r\n        })\r\n}\r\n\r\n","import React, {useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport s from './Cards.module.css'\r\nimport {Card} from './Card/Card';\r\nimport {AppRootStateType} from '../../../redux/store';\r\nimport {CardType, getCardsTC} from '../../../redux/cards-reducer';\r\nimport {useParams} from 'react-router-dom';\r\n\r\ntype CardsPropsType = {\r\n}\r\n\r\n\r\nexport const Cards = (props: CardsPropsType) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const cards = useSelector<AppRootStateType, Array<CardType>>(state => state.cards.cards)\r\n    //@ts-ignore\r\n    const {id} = useParams()\r\n\r\n    useEffect(() => {\r\n        dispatch(getCardsTC(id))\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <div className={s.wrap}>\r\n\r\n            <>\r\n                <div className={s.table}>\r\n                    <div className={s.question}>\r\n                        Question\r\n                    </div>\r\n                    <div className={s.answer}>\r\n                        Answer\r\n                    </div>\r\n                    <div className={s.grade}>\r\n                        Grade\r\n                    </div>\r\n                    <div className={s.updated}>\r\n                        Updated\r\n                    </div>\r\n                    <div className={s.buttons}>\r\n                        <button>Add</button>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    {cards.map(c => <Card question={c.question} answer={c.answer} updated={c.updated}\r\n                                          cardsPack_id={c.cardsPack_id} grade={c.grade} user_id={c.user_id}/>)}\r\n                </div>\r\n            </>\r\n        </div>\r\n    )\r\n}","import React, {useEffect, useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../../redux/store';\r\nimport {CardType, getCardsTC} from '../../../redux/cards-reducer';\r\nimport {useParams} from 'react-router-dom';\r\nimport Button from '../../common/Button/Button';\r\nimport s from './Learn.module.css'\r\n\r\n\r\nconst getCard = (cards: CardType[]) => {\r\n    const sum = cards.reduce((acc, card) => acc + (6 - card.grade) * (6 - card.grade), 0);\r\n    const rand = Math.random() * sum;\r\n    const res = cards.reduce((acc: { sum: number, id: number }, card, i) => {\r\n            const newSum = acc.sum + (6 - card.grade) * (6 - card.grade);\r\n            return {sum: newSum, id: newSum < rand ? i : acc.id}\r\n        }\r\n        , {sum: 0, id: -1});\r\n    console.log('test: ', sum, rand, res)\r\n\r\n    return cards[res.id + 1];\r\n}\r\n\r\n\r\nexport const Learn = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const cards = useSelector<AppRootStateType, Array<CardType>>(state => state.cards.cards)\r\n\r\n    const [first, setFirst] = useState<boolean>(true);\r\n    const [card, setCard] = useState<CardType>({\r\n        user_id: '',\r\n        updated: '',\r\n        type: '',\r\n        shots: 0,\r\n        rating: 2,\r\n        questionImg: '',\r\n        question: '',\r\n        grade: 3,\r\n        created: '',\r\n        comments: '',\r\n        cardsPack_id: '',\r\n        answer: ''\r\n    })\r\n    const [isChecked, setIsChecked] = useState<boolean>(false);\r\n\r\n    //@ts-ignore\r\n    const {id} = useParams()\r\n\r\n    useEffect(() => {\r\n        if (first) {\r\n            dispatch(getCardsTC(id))\r\n            setFirst(false)\r\n        }\r\n\r\n        if (cards.length > 0) setCard(getCard(cards));\r\n    }, [dispatch, id, cards, first])\r\n\r\n\r\n    const onCheckClick = () => {\r\n        setIsChecked(true)\r\n    }\r\n    const onNextClick = () => {\r\n        setIsChecked(false)\r\n\r\n        if (cards.length > 0) {\r\n            setCard(getCard(cards));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={s.center}>\r\n            <div>\r\n                Question: {card.question}\r\n            </div>\r\n            <div>\r\n                <Button onClick={onCheckClick}>Check</Button>\r\n            </div>\r\n            {isChecked ?\r\n                <div className={s.center}>\r\n                    Answer: {card.answer}\r\n                    <Button onClick={onNextClick}>Next</Button>\r\n                </div>\r\n                : ''\r\n            }\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {Redirect, Route, Switch} from 'react-router-dom';\r\nimport {Login} from './Login/Login';\r\nimport {Registration} from './Registration/Registration';\r\nimport {Profile} from './Profile/Profile';\r\nimport {Error404} from './Error404/404';\r\nimport {PasswordRecovery} from './PasswordRecovery/PasswordRecovery';\r\nimport {EnteringNewPassword} from './EnteringNewPassword/EnteringNewPassword';\r\nimport {Test} from '../Test';\r\nimport {Logout} from './Logout/Logout';\r\nimport {Packs} from './Packs/Packs';\r\nimport {Cards} from './Cards/Cards';\r\nimport {Learn} from './Learn/Learn';\r\n\r\nexport const PATH = {\r\n    LOGIN: \"/login\",\r\n    LOGOUT: '/logout',\r\n    REGISTRATION: \"/registration\",\r\n    PROFILE: \"/profile\",\r\n    ERROR404: \"/404\",\r\n    PASS_RECOVERY: \"/password-recovery\",\r\n    PASS_NEW: \"/entering-new-password/:token\",\r\n    TEST: \"/test\",\r\n    PACKS: \"/packs\"\r\n}\r\n\r\nexport const Main = () => {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route path={\"/\"} exact render={() => <Redirect to={PATH.PROFILE}/>}/>\r\n\r\n\r\n                <Route path={PATH.LOGIN} render={() => <Login/>}/>\r\n                <Route path={PATH.LOGOUT} render={() => <Logout/>}/>\r\n                <Route path={PATH.REGISTRATION} render={() => <Registration/>}/>\r\n                <Route path={PATH.PROFILE} render={() => <Profile/>}/>\r\n                <Route path={PATH.PASS_RECOVERY} render={() => <PasswordRecovery/>}/>\r\n                <Route path={PATH.PASS_NEW} render={() => <EnteringNewPassword/>}/>\r\n                <Route path={PATH.TEST} render={() => <Test/>}/>\r\n                <Route path={PATH.PACKS} render={() => <Packs/>}/>\r\n                <Route path={'/cards/:id'} render={() => <Cards/>}/>\r\n                <Route path={'/learn/:id'} render={() => <Learn/>}/>\r\n\r\n                <Route render={() => <Error404/>}/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './Header.module.css'\r\nimport {PATH} from '../Main/Main';\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div>\r\n            <nav className={s.nav}>\r\n                <div className={`${s.item} ${s.active}`}>\r\n                    <NavLink to={PATH.LOGIN} activeClassName={s.active}>Login</NavLink>\r\n                    <NavLink to={PATH.LOGOUT} activeClassName={s.active}>Logout</NavLink>\r\n                    <NavLink to={PATH.REGISTRATION} activeClassName={s.active}>Registration</NavLink>\r\n                    <NavLink to={PATH.PROFILE} activeClassName={s.active}>Profile</NavLink>\r\n                    <NavLink to={PATH.PASS_RECOVERY} activeClassName={s.active}>Password recovery</NavLink>\r\n                    <NavLink to={PATH.PASS_NEW} activeClassName={s.active}>Entering new password</NavLink>\r\n                    <NavLink to={PATH.TEST} activeClassName={s.active}>Test</NavLink>\r\n                    <NavLink to={PATH.PACKS} activeClassName={s.active}>Packs</NavLink>\r\n                    <NavLink to={'/cards/:id'} activeClassName={s.active}>Cards</NavLink>\r\n                    <NavLink to={'/learn/:id'} activeClassName={s.active}>Learn</NavLink>\r\n                </div>\r\n\r\n            </nav>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport {Header} from './components/Header/Header';\r\nimport {Main} from './components/Main/Main';\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <Header/>\r\n            <Main/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","const initialState = {\r\n    isInitialized: false\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\n\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case 'SET_INITIALIZED':\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype ActionsType = any","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {appReducer} from './app-reducer';\r\nimport {loginReducer} from './login-reducer';\r\nimport {forgotReducer} from './forgot-reducer';\r\nimport {profileReducer} from './profile-reducer';\r\nimport {packsReducer} from './packs-reducer';\r\nimport {cardsReducer} from './cards-reducer';\r\nimport registerReduser from \"./registration-reduser\";\r\nimport {filterOrSearchReducer} from \"./filterOrSearch-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    login: loginReducer,\r\n    registration: registerReduser,\r\n    forgot: forgotReducer,\r\n    profile: profileReducer,\r\n    packs: packsReducer,\r\n    cards: cardsReducer,\r\n    search: filterOrSearchReducer,\r\n})\r\n\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {store} from './redux/store'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <HashRouter>\r\n                <App/>\r\n            </HashRouter>\r\n        </Provider>\r\n\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}